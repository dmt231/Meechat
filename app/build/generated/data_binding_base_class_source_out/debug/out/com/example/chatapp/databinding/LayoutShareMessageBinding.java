// Generated by view binder compiler. Do not edit!
package com.example.chatapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.ProgressBar;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.chatapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class LayoutShareMessageBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView done;

  @NonNull
  public final ProgressBar progressBarShare;

  @NonNull
  public final RecyclerView recyclerViewShareUser;

  @NonNull
  public final RelativeLayout relativelayout1;

  @NonNull
  public final EditText searchBarShare;

  private LayoutShareMessageBinding(@NonNull ConstraintLayout rootView, @NonNull TextView done,
      @NonNull ProgressBar progressBarShare, @NonNull RecyclerView recyclerViewShareUser,
      @NonNull RelativeLayout relativelayout1, @NonNull EditText searchBarShare) {
    this.rootView = rootView;
    this.done = done;
    this.progressBarShare = progressBarShare;
    this.recyclerViewShareUser = recyclerViewShareUser;
    this.relativelayout1 = relativelayout1;
    this.searchBarShare = searchBarShare;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static LayoutShareMessageBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static LayoutShareMessageBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.layout_share_message, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static LayoutShareMessageBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.done;
      TextView done = ViewBindings.findChildViewById(rootView, id);
      if (done == null) {
        break missingId;
      }

      id = R.id.progressBarShare;
      ProgressBar progressBarShare = ViewBindings.findChildViewById(rootView, id);
      if (progressBarShare == null) {
        break missingId;
      }

      id = R.id.recyclerViewShareUser;
      RecyclerView recyclerViewShareUser = ViewBindings.findChildViewById(rootView, id);
      if (recyclerViewShareUser == null) {
        break missingId;
      }

      id = R.id.relativelayout1;
      RelativeLayout relativelayout1 = ViewBindings.findChildViewById(rootView, id);
      if (relativelayout1 == null) {
        break missingId;
      }

      id = R.id.searchBarShare;
      EditText searchBarShare = ViewBindings.findChildViewById(rootView, id);
      if (searchBarShare == null) {
        break missingId;
      }

      return new LayoutShareMessageBinding((ConstraintLayout) rootView, done, progressBarShare,
          recyclerViewShareUser, relativelayout1, searchBarShare);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
