// Generated by view binder compiler. Do not edit!
package com.example.chatapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.FrameLayout;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.chatapp.R;
import com.makeramen.roundedimageview.RoundedImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class LayoutChatBinding implements ViewBinding {
  @NonNull
  private final FrameLayout rootView;

  @NonNull
  public final ImageView btnBack;

  @NonNull
  public final ImageView btnSend;

  @NonNull
  public final RoundedImageView btnSendIcon;

  @NonNull
  public final ImageView cancel;

  @NonNull
  public final EditText chatInput;

  @NonNull
  public final FrameLayout fragmentChat;

  @NonNull
  public final RoundedImageView imageChat;

  @NonNull
  public final ImageView imageStatus;

  @NonNull
  public final RoundedImageView infoChat;

  @NonNull
  public final TextView nameChat;

  @NonNull
  public final ImageView picImage;

  @NonNull
  public final RecyclerView recyclerViewChat;

  @NonNull
  public final RelativeLayout secondView;

  @NonNull
  public final TextView status;

  @NonNull
  public final RelativeLayout topView;

  private LayoutChatBinding(@NonNull FrameLayout rootView, @NonNull ImageView btnBack,
      @NonNull ImageView btnSend, @NonNull RoundedImageView btnSendIcon, @NonNull ImageView cancel,
      @NonNull EditText chatInput, @NonNull FrameLayout fragmentChat,
      @NonNull RoundedImageView imageChat, @NonNull ImageView imageStatus,
      @NonNull RoundedImageView infoChat, @NonNull TextView nameChat, @NonNull ImageView picImage,
      @NonNull RecyclerView recyclerViewChat, @NonNull RelativeLayout secondView,
      @NonNull TextView status, @NonNull RelativeLayout topView) {
    this.rootView = rootView;
    this.btnBack = btnBack;
    this.btnSend = btnSend;
    this.btnSendIcon = btnSendIcon;
    this.cancel = cancel;
    this.chatInput = chatInput;
    this.fragmentChat = fragmentChat;
    this.imageChat = imageChat;
    this.imageStatus = imageStatus;
    this.infoChat = infoChat;
    this.nameChat = nameChat;
    this.picImage = picImage;
    this.recyclerViewChat = recyclerViewChat;
    this.secondView = secondView;
    this.status = status;
    this.topView = topView;
  }

  @Override
  @NonNull
  public FrameLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static LayoutChatBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static LayoutChatBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.layout_chat, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static LayoutChatBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnBack;
      ImageView btnBack = ViewBindings.findChildViewById(rootView, id);
      if (btnBack == null) {
        break missingId;
      }

      id = R.id.btnSend;
      ImageView btnSend = ViewBindings.findChildViewById(rootView, id);
      if (btnSend == null) {
        break missingId;
      }

      id = R.id.btnSendIcon;
      RoundedImageView btnSendIcon = ViewBindings.findChildViewById(rootView, id);
      if (btnSendIcon == null) {
        break missingId;
      }

      id = R.id.cancel;
      ImageView cancel = ViewBindings.findChildViewById(rootView, id);
      if (cancel == null) {
        break missingId;
      }

      id = R.id.chatInput;
      EditText chatInput = ViewBindings.findChildViewById(rootView, id);
      if (chatInput == null) {
        break missingId;
      }

      FrameLayout fragmentChat = (FrameLayout) rootView;

      id = R.id.imageChat;
      RoundedImageView imageChat = ViewBindings.findChildViewById(rootView, id);
      if (imageChat == null) {
        break missingId;
      }

      id = R.id.imageStatus;
      ImageView imageStatus = ViewBindings.findChildViewById(rootView, id);
      if (imageStatus == null) {
        break missingId;
      }

      id = R.id.infoChat;
      RoundedImageView infoChat = ViewBindings.findChildViewById(rootView, id);
      if (infoChat == null) {
        break missingId;
      }

      id = R.id.nameChat;
      TextView nameChat = ViewBindings.findChildViewById(rootView, id);
      if (nameChat == null) {
        break missingId;
      }

      id = R.id.picImage;
      ImageView picImage = ViewBindings.findChildViewById(rootView, id);
      if (picImage == null) {
        break missingId;
      }

      id = R.id.recyclerViewChat;
      RecyclerView recyclerViewChat = ViewBindings.findChildViewById(rootView, id);
      if (recyclerViewChat == null) {
        break missingId;
      }

      id = R.id.secondView;
      RelativeLayout secondView = ViewBindings.findChildViewById(rootView, id);
      if (secondView == null) {
        break missingId;
      }

      id = R.id.status;
      TextView status = ViewBindings.findChildViewById(rootView, id);
      if (status == null) {
        break missingId;
      }

      id = R.id.topView;
      RelativeLayout topView = ViewBindings.findChildViewById(rootView, id);
      if (topView == null) {
        break missingId;
      }

      return new LayoutChatBinding((FrameLayout) rootView, btnBack, btnSend, btnSendIcon, cancel,
          chatInput, fragmentChat, imageChat, imageStatus, infoChat, nameChat, picImage,
          recyclerViewChat, secondView, status, topView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
