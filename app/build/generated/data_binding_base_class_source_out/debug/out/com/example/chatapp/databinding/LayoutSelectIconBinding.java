// Generated by view binder compiler. Do not edit!
package com.example.chatapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.chatapp.R;
import com.makeramen.roundedimageview.RoundedImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class LayoutSelectIconBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final Button btnCancelIcon;

  @NonNull
  public final Button btnSelectIcon;

  @NonNull
  public final RoundedImageView currentIcon;

  @NonNull
  public final ImageView iconConfused;

  @NonNull
  public final ImageView iconEmoji;

  @NonNull
  public final ImageView iconLike;

  @NonNull
  public final ImageView iconSad;

  @NonNull
  public final ImageView iconSmile;

  @NonNull
  public final ImageView iconSmileNotFun;

  @NonNull
  public final View line;

  @NonNull
  public final View line2;

  private LayoutSelectIconBinding(@NonNull RelativeLayout rootView, @NonNull Button btnCancelIcon,
      @NonNull Button btnSelectIcon, @NonNull RoundedImageView currentIcon,
      @NonNull ImageView iconConfused, @NonNull ImageView iconEmoji, @NonNull ImageView iconLike,
      @NonNull ImageView iconSad, @NonNull ImageView iconSmile, @NonNull ImageView iconSmileNotFun,
      @NonNull View line, @NonNull View line2) {
    this.rootView = rootView;
    this.btnCancelIcon = btnCancelIcon;
    this.btnSelectIcon = btnSelectIcon;
    this.currentIcon = currentIcon;
    this.iconConfused = iconConfused;
    this.iconEmoji = iconEmoji;
    this.iconLike = iconLike;
    this.iconSad = iconSad;
    this.iconSmile = iconSmile;
    this.iconSmileNotFun = iconSmileNotFun;
    this.line = line;
    this.line2 = line2;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static LayoutSelectIconBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static LayoutSelectIconBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.layout_select_icon, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static LayoutSelectIconBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnCancelIcon;
      Button btnCancelIcon = ViewBindings.findChildViewById(rootView, id);
      if (btnCancelIcon == null) {
        break missingId;
      }

      id = R.id.btnSelectIcon;
      Button btnSelectIcon = ViewBindings.findChildViewById(rootView, id);
      if (btnSelectIcon == null) {
        break missingId;
      }

      id = R.id.currentIcon;
      RoundedImageView currentIcon = ViewBindings.findChildViewById(rootView, id);
      if (currentIcon == null) {
        break missingId;
      }

      id = R.id.iconConfused;
      ImageView iconConfused = ViewBindings.findChildViewById(rootView, id);
      if (iconConfused == null) {
        break missingId;
      }

      id = R.id.iconEmoji;
      ImageView iconEmoji = ViewBindings.findChildViewById(rootView, id);
      if (iconEmoji == null) {
        break missingId;
      }

      id = R.id.iconLike;
      ImageView iconLike = ViewBindings.findChildViewById(rootView, id);
      if (iconLike == null) {
        break missingId;
      }

      id = R.id.iconSad;
      ImageView iconSad = ViewBindings.findChildViewById(rootView, id);
      if (iconSad == null) {
        break missingId;
      }

      id = R.id.iconSmile;
      ImageView iconSmile = ViewBindings.findChildViewById(rootView, id);
      if (iconSmile == null) {
        break missingId;
      }

      id = R.id.iconSmileNotFun;
      ImageView iconSmileNotFun = ViewBindings.findChildViewById(rootView, id);
      if (iconSmileNotFun == null) {
        break missingId;
      }

      id = R.id.line;
      View line = ViewBindings.findChildViewById(rootView, id);
      if (line == null) {
        break missingId;
      }

      id = R.id.line2;
      View line2 = ViewBindings.findChildViewById(rootView, id);
      if (line2 == null) {
        break missingId;
      }

      return new LayoutSelectIconBinding((RelativeLayout) rootView, btnCancelIcon, btnSelectIcon,
          currentIcon, iconConfused, iconEmoji, iconLike, iconSad, iconSmile, iconSmileNotFun, line,
          line2);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
